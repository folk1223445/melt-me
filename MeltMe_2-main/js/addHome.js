document.addEventListener("DOMContentLoaded", function () {
    const taskList = document.getElementById("taskList"); // üìå ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô home.html
    const saveTaskBtn = document.getElementById("saveTask"); // üìå ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô add_task.html
    const subjectInput = document.getElementById("subject"); // üìå ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô add_task.html
    const colorButtons = document.querySelectorAll(".color-option"); // üìå ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô add_task.html
    let selectedColor = "#5A91E6"; // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô

    const API_URL = "http://localhost:3000/tasks"; // üîó URL ‡∏Ç‡∏≠‡∏á Backend

    // üìå ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡πÉ‡∏ä‡πâ‡πÉ‡∏ô add_task.html ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
    if (colorButtons.length > 0) {
        colorButtons.forEach(button => {
            button.addEventListener("click", function () {
                colorButtons.forEach(btn => btn.classList.remove("selected"));
                this.classList.add("selected");
                selectedColor = this.getAttribute("data-color");
                console.log("üé® ‡∏™‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:", selectedColor);
            });
        });
    }

    // üìå ‡πÇ‡∏´‡∏•‡∏î Task ‡∏à‡∏≤‡∏Å Backend (‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô home.html)
    async function loadTasks() {
        if (!taskList) return; // ‚ùå ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏´‡∏ô‡πâ‡∏≤ Home
        try {
            const response = await fetch(API_URL);
            const tasks = await response.json();
            taskList.innerHTML = "";
            tasks.forEach(task => createTaskElement(task));
        } catch (error) {
            console.error("‚ùå ‡πÇ‡∏´‡∏•‡∏î Task ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", error);
        }
    }

    // üìå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Task ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Backend (‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô add_task.html)
    async function saveTask() {
        if (!subjectInput) return; // ‚ùå ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏´‡∏ô‡πâ‡∏≤ Add Task
        const subject = subjectInput.value.trim();
        if (!subject) {
            alert("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤ (Subject)");
            return;
        }

        const newTask = { subject, color: selectedColor };
        try {
            const response = await fetch(API_URL, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(newTask),
            });

            if (response.ok) {
                console.log("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Task ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", newTask);
                window.location.href = "home.html"; // üîÑ ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Home
            } else {
                console.error("‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Task ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß");
            }
        } catch (error) {
            console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error);
        }
    }

    // üìå ‡∏•‡∏ö Task ‡∏à‡∏≤‡∏Å Backend (‡πÉ‡∏ä‡πâ‡πÉ‡∏ô home.html)
    async function deleteTask(taskId) {
        try {
            const response = await fetch(`${API_URL}/${taskId}`, { method: "DELETE" });
            if (response.ok) {
                console.log(`üóë Task ID ${taskId} ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö`);
                loadTasks(); // ‡πÇ‡∏´‡∏•‡∏î Task ‡πÉ‡∏´‡∏°‡πà
            } else {
                console.error("‚ùå ‡∏•‡∏ö Task ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß");
            }
        } catch (error) {
            console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error);
        }
    }

    // üìå ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î Play ‡πÉ‡∏´‡πâ‡πÑ‡∏õ `system2.html` ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Task (‡πÉ‡∏ä‡πâ‡πÉ‡∏ô home.html)
    function playTask(task) {
        localStorage.setItem("selectedTaskSubject", task.subject);
        localStorage.setItem("selectedTaskColor", task.color);
        window.location.href = "system2.html";
    }

    // üìå ‡∏™‡∏£‡πâ‡∏≤‡∏á Task ‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤ Home
    function createTaskElement(task) {
        const taskDiv = document.createElement("div");
        taskDiv.classList.add("task");
        taskDiv.style.backgroundColor = task.color;
        taskDiv.innerHTML = `
            <div class="task-header">
                <span class="task-category">${task.subject}</span>
                <button class="delete-task" data-id="${task.id}">X</button>
            </div>
            <button class="play-task"></button>
        `;
        taskList.appendChild(taskDiv);

        // ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö Task
        taskDiv.querySelector(".delete-task").addEventListener("click", function () {
            deleteTask(task.id);
        });

        // ‡∏õ‡∏∏‡πà‡∏° Play
        taskDiv.querySelector(".play-task").addEventListener("click", function () {
            playTask(task);
        });
    }

    // üìå ‡πÇ‡∏´‡∏•‡∏î Task ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏´‡∏ô‡πâ‡∏≤ Home
    if (taskList) {
        loadTasks();
    }

    // üìå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Task ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏´‡∏ô‡πâ‡∏≤ Add Task
    if (saveTaskBtn) {
        saveTaskBtn.addEventListener("click", saveTask);
    }
});
